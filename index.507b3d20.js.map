{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAc,SAAS,IAAI,CAAC,aAAa,CAAC,UAC1C,EAAQ,SAAS,IAAI,CAAC,aAAa,CAAC,SACpC,EAAa,EAAM,gBAAgB,CAAC,MAAM,MAAM,CAChD,EAAQ,SAAS,IAAI,CAAC,aAAa,CAAC,eAM1C,SAAS,IACP,IAAM,EAAM,EAAM,gBAAgB,CAAC,MAEnC,EAAY,SAAS,CAAC,MAAM,CAAC,SAC7B,EAAY,SAAS,CAAC,GAAG,CAAC,WAE1B,EAAI,OAAO,CAAC,SAAC,CAAb,EACE,EAAG,SAAS,CAAG,GACf,EAAG,SAAS,CAAG,YACjB,GAEA,IAAM,EAAW,SAAS,IAAI,CAAC,gBAAgB,CAAC,WAEhD,CAAA,EAAY,SAAS,CAAG,UAExB,EAAS,OAAO,CAAC,SAAC,CAAlB,EACO,EAAQ,SAAS,CAAC,QAAQ,CAAC,WAC9B,EAAQ,SAAS,CAAC,GAAG,CAAC,SAE1B,GAEA,EAAM,SAAS,CAAG,EAClB,IACA,IACA,GACF,CAwDA,SAAS,IAAc,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAmB,EAAE,CACpC,EAAY,IAAuB,IAAI,GACvC,EAAe,EAAU,MAAM,CAAC,SAAC,CAAvC,EAA8C,OAAA,CAAI,GAAA,MAAM,CAAG,EACrD,EAAiB,CAAC,EAAiB,KAAK,CAC5C,SAAC,CAAA,CAAI,CADP,EACiB,OAAA,IAAO,CAAS,CAAC,EAAM,A,GAIlC,EAAa,AADF,MAAM,IAAI,CAAC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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar startButton = document.body.querySelector(\"button\");\nvar table = document.body.querySelector(\"table\");\nvar rowsLength = table.querySelectorAll(\"tr\").length;\nvar score = document.body.querySelector(\".game-score\");\nstartButton.addEventListener(\"click\", function() {\n    start();\n});\nfunction start() {\n    var tds = table.querySelectorAll(\"td\");\n    startButton.classList.remove(\"start\");\n    startButton.classList.add(\"restart\");\n    tds.forEach(function(td) {\n        td.innerText = \"\";\n        td.classList = \"field-cell\";\n    });\n    var messages = document.body.querySelectorAll(\".message\");\n    startButton.innerText = \"Restart\";\n    messages.forEach(function(message) {\n        if (!message.classList.contains(\"hidden\")) message.classList.add(\"hidden\");\n    });\n    score.innerText = 0;\n    addRandomCell();\n    addRandomCell();\n    setClass();\n}\ndocument.addEventListener(\"keydown\", function(e) {\n    e.preventDefault();\n});\ndocument.addEventListener(\"keyup\", function(e) {\n    e.preventDefault();\n    var hasStartButton = startButton.innerText === \"Start\";\n    if (getWin()) return;\n    if (e.code === \"ArrowLeft\") {\n        if (hasStartButton) {\n            start();\n            return;\n        }\n        slideLeft();\n    }\n    if (e.code === \"ArrowRight\") {\n        if (hasStartButton) {\n            start();\n            return;\n        }\n        slideRight();\n    }\n    if (e.code === \"ArrowUp\") {\n        if (hasStartButton) {\n            start();\n            return;\n        }\n        slideUp();\n    }\n    if (e.code === \"ArrowDown\") {\n        if (hasStartButton) {\n            start();\n            return;\n        }\n        slideDown();\n    }\n});\nfunction addRandomCell() {\n    var oldFlatBoardCopy = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];\n    var flatBoard = convertToNumberBoard().flat();\n    var isStartBoard = flatBoard.filter(function(el) {\n        return el;\n    }).length < 2;\n    var hasBoardChange = !oldFlatBoardCopy.every(function(el, index) {\n        return el === flatBoard[index];\n    });\n    var allcells = Array.from(table.querySelectorAll(\"td\"));\n    var emptyCells = allcells.filter(function(cell) {\n        return !cell.innerText;\n    });\n    var randomNumber = Math.floor(Math.random() * (emptyCells.length - 1));\n    var randomCell = emptyCells[randomNumber];\n    if (!emptyCells.length && !cheackPossibleMovement()) {\n        var loseMessage = document.querySelector(\".message-lose\");\n        loseMessage.classList.remove(\"hidden\");\n        return;\n    }\n    if (!hasBoardChange && !isStartBoard) return;\n    if (randomCell) randomCell.innerText = Math.random() < 0.9 ? 2 : 4;\n}\nfunction cheackPossibleMovement() {\n    var board = convertToNumberBoard();\n    for(var r = 0; r < rowsLength; r++)for(var i = 0; i < rowsLength; i++){\n        var currentCell = board[r][i];\n        var rightCell = board[r] && board[r][i + 1];\n        var downCell = board[r + 1] && board[r + 1][i];\n        if (currentCell === rightCell || currentCell === downCell) return true;\n    }\n    return false;\n}\nfunction slideLeft() {\n    var board = convertToNumberBoard();\n    var flatBoardCopy = _to_consumable_array(board).flat();\n    for(var i = 0; i < rowsLength; i++){\n        var row = board[i];\n        row = slide(row);\n        board[i] = row;\n    }\n    var flatBoard = board.flat();\n    convertToTableBoard(flatBoard);\n    addRandomCell(flatBoardCopy);\n    setClass();\n}\nfunction slideRight() {\n    var board = convertToNumberBoard();\n    var flatBoardCopy = _to_consumable_array(board).flat();\n    for(var i = 0; i < rowsLength; i++){\n        var row = board[i];\n        row.reverse();\n        row = slide(row);\n        row.reverse();\n        board[i] = row;\n    }\n    var flatBoard = board.flat();\n    convertToTableBoard(flatBoard);\n    addRandomCell(flatBoardCopy);\n    setClass();\n}\nfunction slideUp() {\n    var board = convertToNumberBoard();\n    var flatBoardCopy = _to_consumable_array(board).flat();\n    for(var c = 0; c < rowsLength; c++){\n        var row = [];\n        for(var r = 0; r < rowsLength; r++)row.push(board[r][c]);\n        row = slide(row);\n        for(var r1 = 0; r1 < rowsLength; r1++)board[r1][c] = row[r1];\n    }\n    var flatBoard = board.flat();\n    convertToTableBoard(flatBoard);\n    addRandomCell(flatBoardCopy);\n    setClass();\n}\nfunction slideDown() {\n    var board = convertToNumberBoard();\n    var flatBoardCopy = _to_consumable_array(board).flat();\n    for(var c = 0; c < rowsLength; c++){\n        var row = [];\n        for(var r = 0; r < rowsLength; r++)row.push(board[r][c]);\n        row.reverse();\n        row = slide(row);\n        row.reverse();\n        for(var r1 = 0; r1 < rowsLength; r1++)board[r1][c] = row[r1];\n    }\n    var flatBoard = board.flat();\n    convertToTableBoard(flatBoard);\n    addRandomCell(flatBoardCopy);\n    setClass();\n}\nfunction setClass() {\n    var tds = table.querySelectorAll(\"td\");\n    tds.forEach(function(td) {\n        td.classList = \"field-cell\";\n        if (td.innerText) td.classList.add(\"field-cell--\".concat(td.innerText));\n    });\n}\nfunction slide(row) {\n    var filteredRow = filterZero(row);\n    for(var i = 0; i < filteredRow.length; i++)if (filteredRow[i] === filteredRow[i + 1]) {\n        filteredRow[i] *= 2;\n        filteredRow[i + 1] = 0;\n        score.innerText = Number(score.innerText) + filteredRow[i];\n    }\n    filteredRow = filterZero(filteredRow);\n    while(filteredRow.length < rowsLength)filteredRow.push(0);\n    return filteredRow;\n}\nfunction filterZero(row) {\n    return row.filter(function(cell) {\n        return cell;\n    });\n}\nfunction convertToNumberBoard() {\n    var trs = Array.from(table.querySelector(\"tbody\").children);\n    var mainBoard = [];\n    trs.map(function(tr) {\n        var row = [];\n        mainBoard.push(row);\n        _to_consumable_array(tr.children).forEach(function(td) {\n            row.push(+td.innerText);\n        });\n    });\n    return mainBoard;\n}\nfunction convertToTableBoard(board) {\n    var allCells = Array.from(table.querySelectorAll(\"td\"));\n    for(var i = 0; i < allCells.length; i++)allCells[i].innerText = board[i] === 0 ? \"\" : board[i];\n}\nfunction getWin() {\n    var tds = table.querySelectorAll(\"td\");\n    var winMessage = document.body.querySelector(\".message-win\");\n    tds.forEach(function(td) {\n        if (td.innerText === \"2048\") winMessage.classList.remove(\"hidden\");\n    });\n    if (!winMessage.classList.contains(\"hidden\")) return true;\n}\n\n//# sourceMappingURL=index.507b3d20.js.map\n","'use strict';\n\nconst startButton = document.body.querySelector('button');\nconst table = document.body.querySelector('table');\nconst rowsLength = table.querySelectorAll('tr').length;\nconst score = document.body.querySelector('.game-score');\n\nstartButton.addEventListener('click', () => {\n  start();\n});\n\nfunction start() {\n  const tds = table.querySelectorAll('td');\n\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n\n  tds.forEach((td) => {\n    td.innerText = '';\n    td.classList = 'field-cell';\n  });\n\n  const messages = document.body.querySelectorAll('.message');\n\n  startButton.innerText = 'Restart';\n\n  messages.forEach((message) => {\n    if (!message.classList.contains('hidden')) {\n      message.classList.add('hidden');\n    }\n  });\n\n  score.innerText = 0;\n  addRandomCell();\n  addRandomCell();\n  setClass();\n}\n\ndocument.addEventListener('keydown', (e) => {\n  e.preventDefault();\n});\n\ndocument.addEventListener('keyup', (e) => {\n  e.preventDefault();\n\n  const hasStartButton = startButton.innerText === 'Start';\n\n  if (getWin()) {\n    return;\n  }\n\n  if (e.code === 'ArrowLeft') {\n    if (hasStartButton) {\n      start();\n\n      return;\n    }\n\n    slideLeft();\n  }\n\n  if (e.code === 'ArrowRight') {\n    if (hasStartButton) {\n      start();\n\n      return;\n    }\n\n    slideRight();\n  }\n\n  if (e.code === 'ArrowUp') {\n    if (hasStartButton) {\n      start();\n\n      return;\n    }\n\n    slideUp();\n  }\n\n  if (e.code === 'ArrowDown') {\n    if (hasStartButton) {\n      start();\n\n      return;\n    }\n\n    slideDown();\n  }\n});\n\nfunction addRandomCell(oldFlatBoardCopy = []) {\n  const flatBoard = convertToNumberBoard().flat();\n  const isStartBoard = flatBoard.filter((el) => el).length < 2;\n  const hasBoardChange = !oldFlatBoardCopy.every(\n    (el, index) => el === flatBoard[index],\n  );\n\n  const allcells = Array.from(table.querySelectorAll('td'));\n  const emptyCells = allcells.filter((cell) => !cell.innerText);\n  const randomNumber = Math.floor(Math.random() * (emptyCells.length - 1));\n  const randomCell = emptyCells[randomNumber];\n\n  if (!emptyCells.length && !cheackPossibleMovement()) {\n    const loseMessage = document.querySelector('.message-lose');\n\n    loseMessage.classList.remove('hidden');\n\n    return;\n  }\n\n  if (!hasBoardChange && !isStartBoard) {\n    return;\n  }\n\n  if (randomCell) {\n    randomCell.innerText = Math.random() < 0.9 ? 2 : 4;\n  }\n}\n\nfunction cheackPossibleMovement() {\n  const board = convertToNumberBoard();\n\n  for (let r = 0; r < rowsLength; r++) {\n    for (let i = 0; i < rowsLength; i++) {\n      const currentCell = board[r][i];\n      const rightCell = board[r] && board[r][i + 1];\n      const downCell = board[r + 1] && board[r + 1][i];\n\n      if (currentCell === rightCell || currentCell === downCell) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction slideLeft() {\n  const board = convertToNumberBoard();\n  const flatBoardCopy = [...board].flat();\n\n  for (let i = 0; i < rowsLength; i++) {\n    let row = board[i];\n\n    row = slide(row);\n    board[i] = row;\n  }\n\n  const flatBoard = board.flat();\n\n  convertToTableBoard(flatBoard);\n  addRandomCell(flatBoardCopy);\n  setClass();\n}\n\nfunction slideRight() {\n  const board = convertToNumberBoard();\n  const flatBoardCopy = [...board].flat();\n\n  for (let i = 0; i < rowsLength; i++) {\n    let row = board[i];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    board[i] = row;\n  }\n\n  const flatBoard = board.flat();\n\n  convertToTableBoard(flatBoard);\n  addRandomCell(flatBoardCopy);\n  setClass();\n}\n\nfunction slideUp() {\n  const board = convertToNumberBoard();\n  const flatBoardCopy = [...board].flat();\n\n  for (let c = 0; c < rowsLength; c++) {\n    let row = [];\n\n    for (let r = 0; r < rowsLength; r++) {\n      row.push(board[r][c]);\n    }\n\n    row = slide(row);\n\n    for (let r = 0; r < rowsLength; r++) {\n      board[r][c] = row[r];\n    }\n  }\n\n  const flatBoard = board.flat();\n\n  convertToTableBoard(flatBoard);\n  addRandomCell(flatBoardCopy);\n  setClass();\n}\n\nfunction slideDown() {\n  const board = convertToNumberBoard();\n  const flatBoardCopy = [...board].flat();\n\n  for (let c = 0; c < rowsLength; c++) {\n    let row = [];\n\n    for (let r = 0; r < rowsLength; r++) {\n      row.push(board[r][c]);\n    }\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rowsLength; r++) {\n      board[r][c] = row[r];\n    }\n  }\n\n  const flatBoard = board.flat();\n\n  convertToTableBoard(flatBoard);\n  addRandomCell(flatBoardCopy);\n  setClass();\n}\n\nfunction setClass() {\n  const tds = table.querySelectorAll('td');\n\n  tds.forEach((td) => {\n    td.classList = 'field-cell';\n\n    if (td.innerText) {\n      td.classList.add(`field-cell--${td.innerText}`);\n    }\n  });\n}\n\nfunction slide(row) {\n  let filteredRow = filterZero(row);\n\n  for (let i = 0; i < filteredRow.length; i++) {\n    if (filteredRow[i] === filteredRow[i + 1]) {\n      filteredRow[i] *= 2;\n      filteredRow[i + 1] = 0;\n      score.innerText = Number(score.innerText) + filteredRow[i];\n    }\n  }\n\n  filteredRow = filterZero(filteredRow);\n\n  while (filteredRow.length < rowsLength) {\n    filteredRow.push(0);\n  }\n\n  return filteredRow;\n}\n\nfunction filterZero(row) {\n  return row.filter((cell) => cell);\n}\n\nfunction convertToNumberBoard() {\n  const trs = Array.from(table.querySelector('tbody').children);\n  const mainBoard = [];\n\n  trs.map((tr) => {\n    const row = [];\n\n    mainBoard.push(row);\n\n    [...tr.children].forEach((td) => {\n      row.push(+td.innerText);\n    });\n  });\n\n  return mainBoard;\n}\n\nfunction convertToTableBoard(board) {\n  const allCells = Array.from(table.querySelectorAll('td'));\n\n  for (let i = 0; i < allCells.length; i++) {\n    allCells[i].innerText = board[i] === 0 ? '' : board[i];\n  }\n}\n\nfunction getWin() {\n  const tds = table.querySelectorAll('td');\n  const winMessage = document.body.querySelector('.message-win');\n\n  tds.forEach((td) => {\n    if (td.innerText === '2048') {\n      winMessage.classList.remove('hidden');\n    }\n  });\n\n  if (!winMessage.classList.contains('hidden')) {\n    return true;\n  }\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","startButton","document","body","querySelector","table","rowsLength","querySelectorAll","score","start","tds","classList","remove","add","forEach","td","innerText","messages","message","contains","addRandomCell","setClass","oldFlatBoardCopy","arguments","flatBoard","convertToNumberBoard","flat","isStartBoard","filter","el","hasBoardChange","every","index","emptyCells","allcells","cell","randomNumber","Math","floor","random","randomCell","cheackPossibleMovement","board","r","currentCell","rightCell","downCell","loseMessage","concat","slide","row","filteredRow","filterZero","Number","push","trs","children","mainBoard","map","tr","convertToTableBoard","allCells","addEventListener","e","preventDefault","hasStartButton","getWin","winMessage","code","slideLeft","flatBoardCopy","slideRight","reverse","slideUp","c","r1","slideDown"],"version":3,"file":"index.507b3d20.js.map"}